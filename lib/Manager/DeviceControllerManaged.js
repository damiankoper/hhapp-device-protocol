"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class DeviceControllerManaged {
    constructor(config, devices) {
        this.socket = config.socket;
        this.target = {
            name: config.name,
            type: config.type,
        };
        this.devices = devices;
        this.setEvents();
    }
    getSocket() {
        return this.socket;
    }
    matchesTarget(target) {
        return target.name === this.target.name || target.type === this.target.type;
    }
    sendStatus(status) {
        this.socket.emit('status', status);
    }
    connected() {
        return this.socket.connected;
    }
    destroy() {
        this.socket.disconnect();
    }
    setEvents() {
        this.socket.use((packet, next) => {
            if (packet[0] !== 'status') {
                this.devices.forEach(device => {
                    if (device.matchesTarget(this.target)) {
                        device.sendAction(packet[0], packet[1]);
                    }
                });
            }
            next();
        });
    }
}
exports.default = DeviceControllerManaged;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlQ29udHJvbGxlck1hbmFnZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvTWFuYWdlci9EZXZpY2VDb250cm9sbGVyTWFuYWdlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVFBLE1BQXFCLHVCQUF1QjtJQUsxQyxZQUNFLE1BQXFDLEVBQ3JDLE9BQXdCO1FBRXhCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM1QixJQUFJLENBQUMsTUFBTSxHQUFHO1lBQ1osSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO1lBQ2pCLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSTtTQUNsQixDQUFDO1FBQ0YsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFTSxTQUFTO1FBQ2QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxhQUFhLENBQUMsTUFBb0I7UUFDdkMsT0FBTyxNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDOUUsQ0FBQztJQUVNLFVBQVUsQ0FBQyxNQUFvQjtRQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVNLFNBQVM7UUFDZCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDO0lBQy9CLENBQUM7SUFFTSxPQUFPO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU8sU0FBUztRQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBdUIsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUNoRCxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO29CQUM1QixJQUFJLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO3dCQUNyQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztxQkFDekM7Z0JBQ0gsQ0FBQyxDQUFDLENBQUM7YUFDSjtZQUNELElBQUksRUFBRSxDQUFDO1FBQ1QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFsREQsMENBa0RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGV2aWNlU3RhdHVzIH0gZnJvbSAnLi4vRGV2aWNlL1N0YXR1cyc7XG5pbXBvcnQgRGV2aWNlTWFuYWdlZCBmcm9tICcuL0RldmljZU1hbmFnZWQnO1xuaW1wb3J0IHsgVGFyZ2V0Q29uZmlnIH0gZnJvbSAnLi9NYW5hZ2VyJztcblxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VDb250cm9sbGVyTWFuYWdlZENvbmZpZyBleHRlbmRzIFRhcmdldENvbmZpZyB7XG4gIHNvY2tldDogU29ja2V0SU8uU29ja2V0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZXZpY2VDb250cm9sbGVyTWFuYWdlZCB7XG4gIHByaXZhdGUgdGFyZ2V0OiBUYXJnZXRDb25maWc7XG4gIHByaXZhdGUgc29ja2V0OiBTb2NrZXRJTy5Tb2NrZXQ7XG4gIHByaXZhdGUgZGV2aWNlczogRGV2aWNlTWFuYWdlZFtdO1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihcbiAgICBjb25maWc6IERldmljZUNvbnRyb2xsZXJNYW5hZ2VkQ29uZmlnLFxuICAgIGRldmljZXM6IERldmljZU1hbmFnZWRbXVxuICApIHtcbiAgICB0aGlzLnNvY2tldCA9IGNvbmZpZy5zb2NrZXQ7XG4gICAgdGhpcy50YXJnZXQgPSB7XG4gICAgICBuYW1lOiBjb25maWcubmFtZSxcbiAgICAgIHR5cGU6IGNvbmZpZy50eXBlLFxuICAgIH07XG4gICAgdGhpcy5kZXZpY2VzID0gZGV2aWNlcztcbiAgICB0aGlzLnNldEV2ZW50cygpO1xuICB9XG5cbiAgcHVibGljIGdldFNvY2tldCgpIHtcbiAgICByZXR1cm4gdGhpcy5zb2NrZXQ7XG4gIH1cblxuICBwdWJsaWMgbWF0Y2hlc1RhcmdldCh0YXJnZXQ6IFRhcmdldENvbmZpZykge1xuICAgIHJldHVybiB0YXJnZXQubmFtZSA9PT0gdGhpcy50YXJnZXQubmFtZSB8fCB0YXJnZXQudHlwZSA9PT0gdGhpcy50YXJnZXQudHlwZTtcbiAgfVxuXG4gIHB1YmxpYyBzZW5kU3RhdHVzKHN0YXR1czogRGV2aWNlU3RhdHVzKSB7XG4gICAgdGhpcy5zb2NrZXQuZW1pdCgnc3RhdHVzJywgc3RhdHVzKTtcbiAgfVxuXG4gIHB1YmxpYyBjb25uZWN0ZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc29ja2V0LmNvbm5lY3RlZDtcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95KCkge1xuICAgIHRoaXMuc29ja2V0LmRpc2Nvbm5lY3QoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0RXZlbnRzKCkge1xuICAgIHRoaXMuc29ja2V0LnVzZSgocGFja2V0OiBTb2NrZXRJTy5QYWNrZXQsIG5leHQpID0+IHtcbiAgICAgIGlmIChwYWNrZXRbMF0gIT09ICdzdGF0dXMnKSB7XG4gICAgICAgIHRoaXMuZGV2aWNlcy5mb3JFYWNoKGRldmljZSA9PiB7XG4gICAgICAgICAgaWYgKGRldmljZS5tYXRjaGVzVGFyZ2V0KHRoaXMudGFyZ2V0KSkge1xuICAgICAgICAgICAgZGV2aWNlLnNlbmRBY3Rpb24ocGFja2V0WzBdLCBwYWNrZXRbMV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBuZXh0KCk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==